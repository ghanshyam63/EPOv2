@model EPOv2.ViewModels.InvoicePageViewModel
@{
    ViewBag.Title = "Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">

    $(function () {
        if (parseFloat($("#Variance").val()) !== 0) {
            $("#div-variancePanel").removeClass("hidden");
        }
    });

    function cleanTextArea(parameters) {
        $('#div-comment').removeClass("has-error");
    }

    function AuthoriseInvoice(action) {
        // alert(action);
        $("#SelectedStatus").val(action);
        bootbox.confirm("<H2>Have you confirmed the invoice is correct and wish to authorise it for payment?</H2>", function (result) {
            if (result === true) {
                $('#IvoiceForm').submit();
            }
        });
    }
    function RejectInvoice(action) {
        $("#SelectedStatus").val(action);
        var comment = $('#Comment').val();
        if (comment !== "" && comment != null) {
            bootbox.confirm("Are you sure you wish to decline this invoice?", function(result) {
                if (result === true) {
                    $('#IvoiceForm').submit();
                }
            });
        } else {
            $('#div-comment').addClass("has-error");
            $('#Comment').attr("placeholder", "Please leave a comment");
        }
    }

    function ViewDocument(object) {
        var docId = object.value;
        $("#VoucherDocViewId").val(docId);
        var id = "#ViewItem-" + docId;
        var docType = $(id).data("type");
        $('#VoucherDocViewStyle').val(docType);
        $('#DocumentViewForm').attr('target', '_blank').submit();
    }

    function MatchOrder(object) {
        var docId = object.value;
        $("#VoucherDocViewId").val(docId);
        var id = "#MatchItem-" + docId;
        var orderId= $(id).data("orderid");
        var input = $("<input>")
               .attr("type", "hidden")
               .attr("name", "SelectedItem").val(orderId);
        $('#DocumentViewForm').append($(input));
        //changed as per enhancement request from Graeme #39995
        $('#DocumentViewForm')/*.attr('target', '_blank')*/.attr("Action", '@Url.Action("MatchOrder", "PurchaseOrder")').submit();
    }

</script>

<h3>Authorisation Invoice #@Model.InvoiceNumber From @Model.SupplierName</h3>


<div class="row">
    <div class="col-md-8">
        @using (@Html.BeginForm("AuthoriseInvoice", "Ettacher", FormMethod.Post, new { id = "IvoiceForm" }))
        {
            @Html.HiddenFor(x => x.VoucherDocumentId)
            @Html.HiddenFor(x => x.SelectedStatus)
            @Html.HiddenFor(x => x.Variance)
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">General info </h3>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-5">
                            <h4>
                                This Invoice Total: @Html.DisplayFor(x => x.InvoiceTotal)
                            </h4>
                            <h4>PO Total: @Html.DisplayFor(x => x.OrderTotal)</h4>
                            <h5>Related Invoice Total: @Html.DisplayFor(x => x.RelatedInvoiceTotal)</h5>
                            <div class="row">
                                <div class="col-md-4">
                                    <button type="submit" name="button" value="Cancel" class="cancel btn btn-default btn-block btn-inv-sml">Cancel</button>
                                </div>
                                @if (Model.isAuthorisable)
                                {
                                    <div class="col-md-4 ">
                                        <button type="button" name="button" value="Authorised" class="btn btn-primary btn-block btn-inv-sml" onclick="AuthoriseInvoice(value) ">Authorise</button>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-4 ">
                                        <button type="button" name="button" value="Authorised" title="Match the order first" disabled="disabled" class="btn btn-primary btn-block btn-inv-sml" onclick="AuthoriseInvoice(value) ">Authorise</button>
                                    </div>
                                }
                                <div class="col-md-4 ">
                                    <button type="button" name="button" value="Declined" class="cancel btn btn-warning btn-block btn-inv-sml" onclick="RejectInvoice(value)">Reject</button>
                                </div>
                            </div>
                           
                        </div>
                        <div class="col-md-7 form-group" id="div-comment">
                            <label class="control-label">Comments:</label><br/>
                            <span style="white-space: pre-line">@Model.DisplayComment</span>
                            @Html.TextAreaFor(x => x.Comment, 2, 110, new { @class = "form-control ", onfocus = "cleanTextArea()" })
                        </div>
                        <div class="col-md-12">
                            @if (!Model.isAuthorisable)
                            {
                                <div class="bs-callout bs-callout-danger bs-callout-small">
                                    <h4>Match the order first</h4>
                                </div>
                            }
                        </div>
                    </div>
                </div>
        }
        </div>
        <div class="col-md-4">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <h3 class="panel-title">Related document</h3>
                    </div>
                    <div class="panel-body">
                        @using (@Html.BeginForm("ViewDocument", "Ettacher", FormMethod.Post, new { id = "DocumentViewForm" }))
                        {
                            @Html.HiddenFor(x => x.VoucherDocumentId, new { id = "VoucherDocViewId" })
                            @Html.HiddenFor(x => x.VoucherDocumentType, new { id = "VoucherDocViewStyle" })
                        }
                        <table class="table table-responsive">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(x => x.RelatedDocuments[0].Type)</th>
                                    <th>@Html.DisplayNameFor(x => x.RelatedDocuments[0].Authoriser)</th>
                                    @*<th>@Html.DisplayNameFor(x => x.RelatedDocuments[0].Date)</th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            @foreach (var item in Model.RelatedDocuments)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(x => item.Type)</td>
                                    <td>@Html.DisplayFor(x => item.Authoriser)</td>
                                    @*<td>@Html.DisplayFor(x => item.Date)</td>*@
                                    <td>
                                        @Html.HiddenFor(x => item.DocumentId)
                                        <button type="button" value="@item.DocumentId" id="ViewItem-@item.DocumentId" data-type="@item.Type" onclick="ViewDocument(this)" title="View order" class="btn btn-info control-btn-crud">
                                            <span class="glyphicon glyphicon-eye-open"></span>
                                        </button>
                                        @if (item.IsMatchable)
                                        {
                                            <button type="button" value="@item.DocumentId" id="MatchItem-@item.DocumentId" data-orderid="@item.Reference" onclick="MatchOrder(this)" title="Match order" class="btn btn-success control-btn-crud">
                                                <span class="glyphicon glyphicon-duplicate"></span>
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </table>

                    </div>
                </div>
            </div>

        </div>

        <div class="hidden" id="div-variancePanel">
            <div class="alert alert-dismissible alert-warning">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <p>
                    There is an invoice variance of
                    <span id="varianceTotal">
                        @if (Model.Variance < 0)
                        {
                            var variance = Convert.ToDouble(Math.Abs(Model.Variance));
                            @:(@String.Format("{0:C}", variance))
           }
                        else
                        {
                            @Html.DisplayFor(x => Model.Variance)
                        }
                    </span>
                </p>
            </div>
        </div>

        @{
            Html.RenderPartial("_VoucherInfo", Model.VoucherInfo);
            Html.RenderPartial("_VoucherDetails", Model.VoucherDetails);
        }
        @if (Model.isGRNI)
        {
            Html.RenderPartial("_QadOrderItems", Model.QadOrderItems);
        }

        @if (Model.OrderItems != null && Model.OrderItems.Count > 0)
        {
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Purchase order info</h3>
                </div>
                <div class="panel-body">
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th>PO #</th>
                                <th>Line</th>
                                <th>Description</th>
                                <th>Qty</th>
                                @*<th>Unit price</th>*@
                                <th>Total ex GST</th>
                                <th>GST Total</th>
                                <th>Line Total</th>
                                <th>Status</th>
                                <th>Author</th>
                            </tr>
                        </thead>
                        @foreach (var po in Model.OrderItems)
                        {
                            <tr>
                                <td>@Html.DisplayFor(x => po.OrderNumber)</td>
                                <td>@Html.DisplayFor(x => po.Line)</td>
                                <td>@Html.DisplayFor(x => po.Description)</td>
                                <td>@Html.DisplayFor(x => po.Qty)</td>
                                @*<td class="text-right">@Html.DisplayFor(x => po.UnitPrice)</td>*@
                                <td class="text-right">@Html.DisplayFor(x => po.TotalExTax)</td>
                                <td class="text-right">@Html.DisplayFor(x => po.TotalTax)</td>
                                <td class="text-right">@Html.DisplayFor(x => po.Total)</td>
                                <td>@Html.DisplayFor(x => po.Status)</td>
                                <td>@Html.DisplayFor(x => po.Author)</td>
                            </tr>
                        }

                    </table>
                </div>
            </div>
        }
