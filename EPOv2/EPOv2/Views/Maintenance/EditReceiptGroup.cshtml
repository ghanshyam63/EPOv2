@model EPOv2.ViewModels.ReceiptGroupViewModel

@{
    ViewBag.Title = "Edit Receipt Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    
    function AddMember() {
        $("#userList").removeClass("hidden");
        $("#addNewMemberBtn").attr("disabled","disabled");
    }

    function DeleteReceiptGroupMember(ID) {
        var groupID = $('#Id').val();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("DeleteReceiptGroupMember")',
            cache: false,
            data: {
                groupId: groupID,
                id:ID
            },
            error: function (xhr, status, error) {
                $(".alert").html(xhr.responseText);
            },
            success: function (result) {
                $('#MembersTable').html(result);
            }
        });
    }

    function ActivateReceiptGroupMember(ID) {
        var groupID = $('#Id').val();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("ActivateReceiptGroupMember")',
            cache: false,
            data: {
                groupId: groupID,
                id: ID
            },
            error: function (xhr, status, error) {
                $(".alert").html(xhr.responseText);
            },
            success: function (result) {
                $('#MembersTable').html(result);
            }
        });
    }

</script>

<h2>Edit Receipt Group</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isDeleted)
                    @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Members", new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <table class="table" id="MembersTable">
                    @foreach (var item in Model.Members)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(x => item.MemberId)
                                @Html.DisplayFor(x => item.UserName)
                            </td>
                            <td>@Html.DisplayFor(x => item.isDeleted)</td>
                            <td>
                                @if (item.isDeleted)
                                {
                                    <button type="button" title="Delete mapping" class="btn btn-danger control-btn-crud" value="@item.MemberId" onclick="DeleteReceiptGroupMember(@item.MemberId)" disabled="disabled">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                    <button type="button" title="Activate mapping" class="btn btn-info control-btn-crud" value="@item.MemberId" onclick="ActivateReceiptGroupMember(@item.MemberId)">
                                        <span class="glyphicon glyphicon-repeat"></span>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" title="Delete mapping" class="btn btn-danger control-btn-crud" value="@item.MemberId" onclick="DeleteReceiptGroupMember(@item.MemberId) ">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                    <button type="button" title="Activate mapping" class="btn btn-info control-btn-crud" value="@item.MemberId" onclick="ActivateReceiptGroupMember(@item.MemberId)" disabled="disabled">
                                        <span class="glyphicon glyphicon-repeat"></span>
                                    </button>
                                }
                            </td>
                        </tr>
                    }

                </table>

                <div class="col-md-10">
                    <button type="button" title="Add member" id="addNewMemberBtn" class="btn btn-info control-btn-crud" value="@Model.Id" onclick="AddMember(@Model.Id)">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="col-md-12 hidden" id="userList">
            <div class="form-group">
                @Html.Label("Members", new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.ListBoxFor(x => x.SelectedUsers, new MultiSelectList(Model.UserList, "Id", "FullName"), new { @class = "form-control input-sm", size = 30 })
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
