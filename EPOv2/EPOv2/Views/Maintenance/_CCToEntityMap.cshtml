
@model List<EPOv2.ViewModels.CostCentreToEntityViewModel>

<table class="table">
    <tr>
        <th>
            Cost Centre
        </th>
        <th>
            Modified
        </th>
        <th>
            Deleted
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            
            <td>
                @Html.DisplayFor(modelItem => item.CostCentre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModifiedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isDeleted)
            </td>
            <td>
                @if (item.isDeleted)
                {
                    <button type="button" title="Delete mapping" class="btn btn-danger control-btn-crud" value="@item.Id" onclick="DeleteEntityToCCMapping(@item.Id) " disabled="disabled">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                    <button type="button" title="Activate mapping" class="btn btn-info control-btn-crud" value="@item.Id" onclick="ActivateEntityToCCMapping(@item.Id) ">
                        <span class="glyphicon glyphicon-repeat"></span>
                    </button>
                }
                else
                {
                    <button type="button" title="Delete mapping" class="btn btn-danger control-btn-crud" value="@item.Id" onclick="DeleteEntityToCCMapping(@item.Id) ">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                    <button type="button" title="Activate mapping" class="btn btn-info control-btn-crud" value="@item.Id" onclick="ActivateEntityToCCMapping(@item.Id) " disabled="disabled">
                        <span class="glyphicon glyphicon-repeat"></span>
                    </button>
                }
                
                  
            </td>
        </tr>
    }
</table>